import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.Collections;
import java.util.StringTokenizer;

public class Main {
	public static int N;
	public static int K;
	
	public static int[] arrA;
	public static Integer[] arrB;
	
	public static void main(String[] args) throws IOException {
	    BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	    
	    StringTokenizer st = new StringTokenizer(br.readLine(), " ");
	    N = Integer.parseInt(st.nextToken());
	    K = Integer.parseInt(st.nextToken());
	    
	    arrA = new int[N];
	    arrB = new Integer[N];
	    
	    st = new StringTokenizer(br.readLine(), " ");
	    for(int i=0; i<N; i++)
	    	arrA[i] = Integer.parseInt(st.nextToken());
	    
	    st = new StringTokenizer(br.readLine(), " ");
	    for(int i=0; i<N; i++)
	    	arrB[i] = Integer.parseInt(st.nextToken());
	    
	    Swap();
	    System.out.println(getmaxSum());
	}

	public static void Swap() {
		for(int i=0; i<K; i++) {
			Arrays.sort(arrA);
			Arrays.sort(arrB, Collections.reverseOrder());
			
			if(arrA[0] < arrB[0]) {
				int temp = arrA[0];
				arrA[0] = arrB[0];
				arrB[0] = temp;
			}
			else
				break;	
		}
	}
	
	public static int getmaxSum() {
		int sum = 0;
		
		for(int i=0; i<N; i++)
			sum += arrA[i];
		
		return sum;
	}
}
